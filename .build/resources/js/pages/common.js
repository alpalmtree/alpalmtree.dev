(()=>{var i=class e extends HTMLElement{static init=()=>customElements.get("x-toggle")?null:customElements.define("x-toggle",e);constructor(){super(),this.addEventListener("change",this)}checkbox=this.querySelector("input");html=document.querySelector("html");handleEvent=()=>{this.checkbox.checked?(this.html.dataset.theme="dark",localStorage.setItem("prefers_schema","dark")):(this.html.dataset.theme="light",localStorage.setItem("prefers_schema","light"))};connectedCallback(){let t=globalThis.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",a=localStorage.getItem("prefers_schema");if(a){this.html.dataset.theme=a,this.checkbox.checked=a==="dark";return}this.html.dataset.theme=t,this.checkbox.checked=t==="dark"}};i.init();var o=(e,t)=>e.hasAttribute("href")||e.hasAttribute("src")?e.outerHTML.replace(/\?rel=\d+/g,"")===t.outerHTML.replace(/\?rel=\d+/g,""):e.isEqualNode(t),d=async e=>{let a=await(await fetch(e)).text(),l=new DOMParser().parseFromString(a,"text/html"),c=document.querySelector("head"),n=l.querySelector("head"),m=l.querySelector("view-partial"),h=[];for(let s of c.children)[...n.children].some(r=>o(s,r))||h.push(s);for(let s of n.children)[...c.children].some(r=>o(s,r))||c.append(s);h.forEach(s=>s.remove()),document.querySelector("view-partial").replaceWith(m),document.querySelector("header").scrollIntoView()};globalThis.addEventListener("page:changed",async({detail:e})=>{document.startViewTransition?.(async()=>{await d(e)})??await d(e)});globalThis.addEventListener("popstate",()=>{globalThis.dispatchEvent(new CustomEvent("page:changed",{detail:globalThis.location.pathname}))});customElements.define("view-link",class extends HTMLElement{#e=this.querySelector("a").getAttribute("href");connectedCallback(){this.addEventListener("click",e=>{e.preventDefault(),globalThis.history.pushState("",null,this.#e),this.dispatchEvent(new CustomEvent("page:changed",{detail:this.#e,bubbles:!0}))})}});customElements.define("view-partial",class extends HTMLElement{#e=this.getAttribute("script");constructor(){super()}async connectedCallback(){if(!this.#e)return;let{default:e}=await import(this.#e);e?.()}});})();
