(()=>{var i=class e extends HTMLElement{static init=()=>customElements.get("x-toggle")?null:customElements.define("x-toggle",e);constructor(){super(),this.addEventListener("change",this)}checkbox=this.querySelector("input");html=document.querySelector("html");handleEvent=()=>{this.checkbox.checked?(this.html.dataset.theme="dark",localStorage.setItem("prefers_schema","dark")):(this.html.dataset.theme="light",localStorage.setItem("prefers_schema","light"))};connectedCallback(){let t=globalThis.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",a=localStorage.getItem("prefers_schema");if(a){this.html.dataset.theme=a,this.checkbox.checked=a==="dark";return}this.html.dataset.theme=t,this.checkbox.checked=t==="dark"}};i.init();var o=(e,t)=>e.hasAttribute("href")||e.hasAttribute("src")?e.outerHTML.replace(/\?rel=\d+/g,"")===t.outerHTML.replace(/\?rel=\d+/g,""):e.isEqualNode(t);globalThis.addEventListener("page:changed",async({detail:e})=>{let a=await(await fetch(e)).text(),l=new DOMParser().parseFromString(a,"text/html"),c=document.querySelector("head"),n=l.querySelector("head"),d=l.querySelector("view-partial"),h=[];for(let s of c.children)[...n.children].some(r=>o(s,r))||h.push(s);for(let s of n.children)[...c.children].some(r=>o(s,r))||c.append(s);document.startViewTransition(()=>{h.forEach(s=>s.remove()),document.querySelector("view-partial").replaceWith(d)})});globalThis.addEventListener("popstate",()=>{globalThis.dispatchEvent(new CustomEvent("page:changed",{detail:globalThis.location.pathname}))});customElements.define("view-link",class extends HTMLElement{#e=this.querySelector("a").getAttribute("href");connectedCallback(){this.addEventListener("click",e=>{e.preventDefault(),globalThis.history.pushState("",null,this.#e),this.dispatchEvent(new CustomEvent("page:changed",{detail:this.#e,bubbles:!0}))})}});customElements.define("view-partial",class extends HTMLElement{#e=this.getAttribute("script");constructor(){super()}async connectedCallback(){if(!this.#e)return;let{default:e}=await import(this.#e);e?.()}});})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vcmVzb3VyY2VzL2NvbXBvbmVudHMveC10b2dnbGUvY29tcG9uZW50LmpzIiwgIi4uLy4uLy4uLy4uL3Jlc291cmNlcy9qcy92aWV3LXBhcnRpYWxzLmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjbGFzcyBUb2dnbGUgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XG4gIHN0YXRpYyBpbml0ID0gKCkgPT5cbiAgICAhY3VzdG9tRWxlbWVudHMuZ2V0KFwieC10b2dnbGVcIilcbiAgICAgID8gY3VzdG9tRWxlbWVudHMuZGVmaW5lKFwieC10b2dnbGVcIiwgVG9nZ2xlKVxuICAgICAgOiBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsIHRoaXMpO1xuICB9XG5cbiAgLy8gcmVmZXJlbmNlc1xuICBjaGVja2JveCA9IHRoaXMucXVlcnlTZWxlY3RvcihcImlucHV0XCIpO1xuICBodG1sID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImh0bWxcIik7XG5cbiAgaGFuZGxlRXZlbnQgPSAoKSA9PiB7XG4gICAgY29uc3QgaXNDaGVja2VkID0gdGhpcy5jaGVja2JveC5jaGVja2VkO1xuXG4gICAgaWYgKGlzQ2hlY2tlZCkge1xuICAgICAgdGhpcy5odG1sLmRhdGFzZXQudGhlbWUgPSBcImRhcmtcIjtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicHJlZmVyc19zY2hlbWFcIiwgXCJkYXJrXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmh0bWwuZGF0YXNldC50aGVtZSA9IFwibGlnaHRcIjtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicHJlZmVyc19zY2hlbWFcIiwgXCJsaWdodFwiKTtcbiAgICB9XG4gIH07XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29uc3QgYnJvd3NlclNjaGVtYSA9IGdsb2JhbFRoaXMubWF0Y2hNZWRpYShcbiAgICAgICAgXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIsXG4gICAgICApLm1hdGNoZXNcbiAgICAgID8gXCJkYXJrXCJcbiAgICAgIDogXCJsaWdodFwiO1xuICAgIGNvbnN0IHNpdGVTY2hlbWEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInByZWZlcnNfc2NoZW1hXCIpO1xuXG4gICAgaWYgKHNpdGVTY2hlbWEpIHtcbiAgICAgIHRoaXMuaHRtbC5kYXRhc2V0LnRoZW1lID0gc2l0ZVNjaGVtYTtcbiAgICAgIHRoaXMuY2hlY2tib3guY2hlY2tlZCA9IHNpdGVTY2hlbWEgPT09IFwiZGFya1wiO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuaHRtbC5kYXRhc2V0LnRoZW1lID0gYnJvd3NlclNjaGVtYTtcbiAgICB0aGlzLmNoZWNrYm94LmNoZWNrZWQgPSBicm93c2VyU2NoZW1hID09PSBcImRhcmtcIjtcbiAgfVxufVxuXG5Ub2dnbGUuaW5pdCgpO1xuIiwgImNvbnN0IG5vZGVJc0VxdWFsID0gKG5vZGUxLCBub2RlMikgPT4ge1xuICBpZiAobm9kZTEuaGFzQXR0cmlidXRlKFwiaHJlZlwiKSB8fCBub2RlMS5oYXNBdHRyaWJ1dGUoXCJzcmNcIikpIHtcbiAgICByZXR1cm4gbm9kZTEub3V0ZXJIVE1MLnJlcGxhY2UoL1xcP3JlbD1cXGQrL2csIFwiXCIpID09PVxuICAgICAgbm9kZTIub3V0ZXJIVE1MLnJlcGxhY2UoL1xcP3JlbD1cXGQrL2csIFwiXCIpO1xuICB9XG4gIHJldHVybiBub2RlMS5pc0VxdWFsTm9kZShub2RlMik7XG59O1xuXG5nbG9iYWxUaGlzLmFkZEV2ZW50TGlzdGVuZXIoXCJwYWdlOmNoYW5nZWRcIiwgYXN5bmMgKHsgZGV0YWlsIH0pID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goZGV0YWlsKTtcbiAgY29uc3QgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gIGNvbnN0IGRvYyA9IChuZXcgRE9NUGFyc2VyKCkpLnBhcnNlRnJvbVN0cmluZyh0ZXh0LCBcInRleHQvaHRtbFwiKTtcblxuICBjb25zdCBjdXJyZW50SGVhZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJoZWFkXCIpO1xuICBjb25zdCBuZXdIZWFkID0gZG9jLnF1ZXJ5U2VsZWN0b3IoXCJoZWFkXCIpO1xuICBjb25zdCB2aWV3UGFydGlhbCA9IGRvYy5xdWVyeVNlbGVjdG9yKFwidmlldy1wYXJ0aWFsXCIpO1xuXG4gIGNvbnN0IHNjaGVkdWxlUmVtb3ZlID0gW107XG4gIGZvciAoY29uc3QgY2hpbGQgb2YgY3VycmVudEhlYWQuY2hpbGRyZW4pIHtcbiAgICBpZiAoIVsuLi5uZXdIZWFkLmNoaWxkcmVuXS5zb21lKChub2RlKSA9PiBub2RlSXNFcXVhbChjaGlsZCwgbm9kZSkpKSB7XG4gICAgICBzY2hlZHVsZVJlbW92ZS5wdXNoKGNoaWxkKTtcbiAgICB9XG5cbiAgfVxuXG4gIGZvciAoY29uc3QgY2hpbGQgb2YgbmV3SGVhZC5jaGlsZHJlbikge1xuICAgIGlmICghWy4uLmN1cnJlbnRIZWFkLmNoaWxkcmVuXS5zb21lKChub2RlKSA9PiBub2RlSXNFcXVhbChjaGlsZCwgbm9kZSkpKSB7XG4gICAgICBjdXJyZW50SGVhZC5hcHBlbmQoY2hpbGQpO1xuICAgIH1cbiAgfVxuXG4gIGRvY3VtZW50LnN0YXJ0Vmlld1RyYW5zaXRpb24oKCkgPT4ge1xuICAgIHNjaGVkdWxlUmVtb3ZlLmZvckVhY2goKGVsKSA9PiBlbC5yZW1vdmUoKSk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInZpZXctcGFydGlhbFwiKS5yZXBsYWNlV2l0aCh2aWV3UGFydGlhbCk7XG4gIH0pO1xufSk7XG5cbmdsb2JhbFRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsICgpID0+IHtcbiAgZ2xvYmFsVGhpcy5kaXNwYXRjaEV2ZW50KFxuICAgIG5ldyBDdXN0b21FdmVudChcInBhZ2U6Y2hhbmdlZFwiLCB7XG4gICAgICBkZXRhaWw6IGdsb2JhbFRoaXMubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgfSksXG4gICk7XG59KTtcblxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKFxuICBcInZpZXctbGlua1wiLFxuICBjbGFzcyBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgICAjdG8gPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoXCJhXCIpLmdldEF0dHJpYnV0ZShcImhyZWZcIik7XG5cbiAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZ2xvYmFsVGhpcy5oaXN0b3J5LnB1c2hTdGF0ZShcIlwiLCBudWxsLCB0aGlzLiN0byk7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgICBuZXcgQ3VzdG9tRXZlbnQoXCJwYWdlOmNoYW5nZWRcIiwge1xuICAgICAgICAgICAgZGV0YWlsOiB0aGlzLiN0byxcbiAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgICAgICAgfSksXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4pO1xuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoXG4gIFwidmlldy1wYXJ0aWFsXCIsXG4gIGNsYXNzIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xuICAgICNzY3JpcHQgPSB0aGlzLmdldEF0dHJpYnV0ZShcInNjcmlwdFwiKTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBhc3luYyBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgIGlmICghdGhpcy4jc2NyaXB0KSByZXR1cm47XG4gICAgICBjb25zdCB7IGRlZmF1bHQ6IG1haW4gfSA9IGF3YWl0IGltcG9ydCh0aGlzLiNzY3JpcHQpO1xuICAgICAgbWFpbj8uKCk7XG4gICAgfVxuICB9LFxuKTtcbiJdLAogICJtYXBwaW5ncyI6ICJNQUFBLElBQU1BLEVBQU4sTUFBTUMsVUFBZSxXQUFZLENBQy9CLE9BQU8sS0FBTyxJQUNYLGVBQWUsSUFBSSxVQUFVLEVBRTFCLEtBREEsZUFBZSxPQUFPLFdBQVlBLENBQU0sRUFHOUMsYUFBYyxDQUNaLE1BQU0sRUFDTixLQUFLLGlCQUFpQixTQUFVLElBQUksQ0FDdEMsQ0FHQSxTQUFXLEtBQUssY0FBYyxPQUFPLEVBQ3JDLEtBQU8sU0FBUyxjQUFjLE1BQU0sRUFFcEMsWUFBYyxJQUFNLENBQ0EsS0FBSyxTQUFTLFNBRzlCLEtBQUssS0FBSyxRQUFRLE1BQVEsT0FDMUIsYUFBYSxRQUFRLGlCQUFrQixNQUFNLElBRTdDLEtBQUssS0FBSyxRQUFRLE1BQVEsUUFDMUIsYUFBYSxRQUFRLGlCQUFrQixPQUFPLEVBRWxELEVBRUEsbUJBQW9CLENBQ2xCLElBQU1DLEVBQWdCLFdBQVcsV0FDN0IsOEJBQ0YsRUFBRSxRQUNBLE9BQ0EsUUFDRUMsRUFBYSxhQUFhLFFBQVEsZ0JBQWdCLEVBRXhELEdBQUlBLEVBQVksQ0FDZCxLQUFLLEtBQUssUUFBUSxNQUFRQSxFQUMxQixLQUFLLFNBQVMsUUFBVUEsSUFBZSxPQUN2QyxNQUNGLENBRUEsS0FBSyxLQUFLLFFBQVEsTUFBUUQsRUFDMUIsS0FBSyxTQUFTLFFBQVVBLElBQWtCLE1BQzVDLENBQ0YsRUFFQUYsRUFBTyxLQUFLLEVDOUNaLElBQU1JLEVBQWMsQ0FBQ0MsRUFBT0MsSUFDdEJELEVBQU0sYUFBYSxNQUFNLEdBQUtBLEVBQU0sYUFBYSxLQUFLLEVBQ2pEQSxFQUFNLFVBQVUsUUFBUSxhQUFjLEVBQUUsSUFDN0NDLEVBQU0sVUFBVSxRQUFRLGFBQWMsRUFBRSxFQUVyQ0QsRUFBTSxZQUFZQyxDQUFLLEVBR2hDLFdBQVcsaUJBQWlCLGVBQWdCLE1BQU8sQ0FBRSxPQUFBQyxDQUFPLElBQU0sQ0FFaEUsSUFBTUMsRUFBTyxNQURELE1BQU0sTUFBTUQsQ0FBTSxHQUNQLEtBQUssRUFDdEJFLEVBQU8sSUFBSSxVQUFVLEVBQUcsZ0JBQWdCRCxFQUFNLFdBQVcsRUFFekRFLEVBQWMsU0FBUyxjQUFjLE1BQU0sRUFDM0NDLEVBQVVGLEVBQUksY0FBYyxNQUFNLEVBQ2xDRyxFQUFjSCxFQUFJLGNBQWMsY0FBYyxFQUU5Q0ksRUFBaUIsQ0FBQyxFQUN4QixRQUFXQyxLQUFTSixFQUFZLFNBQ3pCLENBQUMsR0FBR0MsRUFBUSxRQUFRLEVBQUUsS0FBTUksR0FBU1gsRUFBWVUsRUFBT0MsQ0FBSSxDQUFDLEdBQ2hFRixFQUFlLEtBQUtDLENBQUssRUFLN0IsUUFBV0EsS0FBU0gsRUFBUSxTQUNyQixDQUFDLEdBQUdELEVBQVksUUFBUSxFQUFFLEtBQU1LLEdBQVNYLEVBQVlVLEVBQU9DLENBQUksQ0FBQyxHQUNwRUwsRUFBWSxPQUFPSSxDQUFLLEVBSTVCLFNBQVMsb0JBQW9CLElBQU0sQ0FDakNELEVBQWUsUUFBU0csR0FBT0EsRUFBRyxPQUFPLENBQUMsRUFDMUMsU0FBUyxjQUFjLGNBQWMsRUFBRSxZQUFZSixDQUFXLENBQ2hFLENBQUMsQ0FDSCxDQUFDLEVBRUQsV0FBVyxpQkFBaUIsV0FBWSxJQUFNLENBQzVDLFdBQVcsY0FDVCxJQUFJLFlBQVksZUFBZ0IsQ0FDOUIsT0FBUSxXQUFXLFNBQVMsUUFDOUIsQ0FBQyxDQUNILENBQ0YsQ0FBQyxFQUVELGVBQWUsT0FDYixZQUNBLGNBQWMsV0FBWSxDQUN4QkssR0FBTSxLQUFLLGNBQWMsR0FBRyxFQUFFLGFBQWEsTUFBTSxFQUVqRCxtQkFBb0IsQ0FDbEIsS0FBSyxpQkFBaUIsUUFBVSxHQUFNLENBQ3BDLEVBQUUsZUFBZSxFQUNqQixXQUFXLFFBQVEsVUFBVSxHQUFJLEtBQU0sS0FBS0EsRUFBRyxFQUMvQyxLQUFLLGNBQ0gsSUFBSSxZQUFZLGVBQWdCLENBQzlCLE9BQVEsS0FBS0EsR0FDYixRQUFTLEVBQ1gsQ0FBQyxDQUNILENBQ0YsQ0FBQyxDQUNILENBQ0YsQ0FDRixFQUVBLGVBQWUsT0FDYixlQUNBLGNBQWMsV0FBWSxDQUN4QkMsR0FBVSxLQUFLLGFBQWEsUUFBUSxFQUVwQyxhQUFjLENBQ1osTUFBTSxDQUNSLENBRUEsTUFBTSxtQkFBb0IsQ0FDeEIsR0FBSSxDQUFDLEtBQUtBLEdBQVMsT0FDbkIsR0FBTSxDQUFFLFFBQVNDLENBQUssRUFBSSxNQUFNLE9BQU8sS0FBS0QsSUFDNUNDLElBQU8sQ0FDVCxDQUNGLENBQ0YiLAogICJuYW1lcyI6IFsiVG9nZ2xlIiwgIl9Ub2dnbGUiLCAiYnJvd3NlclNjaGVtYSIsICJzaXRlU2NoZW1hIiwgIm5vZGVJc0VxdWFsIiwgIm5vZGUxIiwgIm5vZGUyIiwgImRldGFpbCIsICJ0ZXh0IiwgImRvYyIsICJjdXJyZW50SGVhZCIsICJuZXdIZWFkIiwgInZpZXdQYXJ0aWFsIiwgInNjaGVkdWxlUmVtb3ZlIiwgImNoaWxkIiwgIm5vZGUiLCAiZWwiLCAiI3RvIiwgIiNzY3JpcHQiLCAibWFpbiJdCn0K
